<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="TravelBoard">
<!--    <insert id="save" parameterType="board">-->
<!--        insert into board_table(boardWriter, boardPass, boardTitle, boardContents)-->
<!--        values(#{boardWriter}, #{boardPass}, #{boardTitle}, #{boardContents})-->
<!--    </insert>-->

    <select id="popularSpotFindAll" resultType="spot">
        SELECT
            travel_spot.id,
            travel_spot.spot_name,
            travel_spot.like_cnt,
            user.nickname,
            travel_spot.img_name,
            COUNT(comment.id) AS commentCount,
            map.road_name
        FROM
            travel_spot
                LEFT JOIN user ON travel_spot.user_id = user.id
                LEFT JOIN map ON travel_spot.map_id = map.id
                LEFT JOIN comment ON travel_spot.id = comment.spot_id
        GROUP BY
            travel_spot.id
        order by
            travel_spot.like_cnt desc
    </select>

    <select id="getSpotLocation" resultType="mapList">
        SELECT
            travel_spot.id as spot_id,
            travel_spot.spot_name,
            travel_spot.spotComment,
            map.longitude,
            travel_spot.img_name,
            map.latitude,
            map.road_name
        FROM
            travel_spot

                LEFT JOIN map ON travel_spot.map_id = map.id

    </select>

    <select id="newSpotFindAll" resultType="spot">
        SELECT
            travel_spot.id,
            travel_spot.spot_name,
            travel_spot.like_cnt,
            travel_spot.timestamp,
            user.nickname,
            travel_spot.img_name,
            COUNT(comment.id) AS commentCount,
            map.road_name
        FROM
            travel_spot
                LEFT JOIN user ON travel_spot.user_id = user.id
                LEFT JOIN map ON travel_spot.map_id = map.id
                LEFT JOIN comment ON travel_spot.id = comment.spot_id
        GROUP BY
            travel_spot.id
        order by
            travel_spot.timestamp desc
    </select>

    <select id = "getCommentList" resultType="comment" parameterType="comment">

        select comment.id, comment.spot_id,comment.user_id,comment.content, comment.photo_id,user.nickname as user_nickname  from comment left join user on comment.user_id = user.id where comment.spot_id = #{spot_id} and comment.photo_id = ${photo_id}

    </select>


    <select id="getOnePack" resultType="spot" parameterType="Integer">
        SELECT
            travel_spot.id,
            travel_spot.user_id,
            travel_spot.spot_name,
            travel_spot.like_cnt,
            travel_spot.timestamp,
            user.nickname,
            travel_spot.img_name,
            COUNT(comment.id) AS commentCount,
            map.road_name
        FROM
            travel_spot
                LEFT JOIN user ON travel_spot.user_id = user.id
                LEFT JOIN map ON travel_spot.map_id = map.id
                LEFT JOIN comment ON travel_spot.id = comment.spot_id
        where travel_spot.id = #{packId}
        GROUP BY
            travel_spot.id;
    </select>



    <select id="mySpotFindAll" resultType="spot" parameterType="Integer">
        SELECT
            travel_spot.id,
            travel_spot.user_id,
            travel_spot.spot_name,
            travel_spot.like_cnt,
            travel_spot.timestamp,
            user.nickname,
            travel_spot.img_name,
            COUNT(comment.id) AS commentCount,
            map.road_name
        FROM
            travel_spot
                LEFT JOIN user ON travel_spot.user_id = user.id
                LEFT JOIN map ON travel_spot.map_id = map.id
                LEFT JOIN comment ON travel_spot.id = comment.spot_id
        where travel_spot.user_id = #{id}
        GROUP BY
            travel_spot.id

    </select>

    <select id="myPickSpotFindAll" resultType="spot" parameterType="Integer">
        SELECT
            travel_spot.id,
            travel_spot.user_id,
            travel_spot.spot_name,
            travel_spot.like_cnt,
            travel_spot.timestamp,
            user.nickname,
            travel_spot.img_name,
            COUNT(comment.id) AS commentCount,
            map.road_name
        FROM
            travel_spot
                LEFT JOIN user ON travel_spot.user_id = user.id
                LEFT JOIN map ON travel_spot.map_id = map.id
                LEFT JOIN comment ON travel_spot.id = comment.spot_id
                LEFT JOIN user_pick ON travel_spot.id = user_pick.pick_spot_id
        where user_pick.user_id = #{id}
        GROUP BY
            travel_spot.id

    </select>


    <select id = "searchSpot" resultType="spot" parameterType="String">

        SELECT
            travel_spot.id,
            travel_spot.user_id,
            travel_spot.spot_name,
            travel_spot.like_cnt,
            travel_spot.timestamp,
            user.nickname,
            travel_spot.img_name,
            COUNT(comment.id) AS commentCount,
            map.road_name
        FROM
            travel_spot
                LEFT JOIN user ON travel_spot.user_id = user.id
                LEFT JOIN map ON travel_spot.map_id = map.id
                LEFT JOIN comment ON travel_spot.id = comment.spot_id
        where spot_name like '%${spot_name}%'
        GROUP BY
            travel_spot.id

    </select>


    <select id = "getPhotoList" resultType="photo" parameterType="Integer">
        select * from photo where spot_id = #{spot_id}


    </select>





    <insert id = "joinUser" parameterType="joinUser">
        insert into user(login_id, login_password, nickname)
        values(#{id}, #{password}, #{nickname})


    </insert>

    <insert id = "createSpot" parameterType="spot" >
        insert into travel_spot(spot_name, spotComment,img_name,user_id)
        values(#{spot_name}, #{spotComment},#{img_name},#{user_id})


    </insert>
    <insert id = "createPhoto" parameterType="spot">
        insert into photo(spot_id, latitude, longitude,img_name,photo_name, photo_comment)
        values(#{spot_id}, #{latitude},#{longitude},#{img_name},#{photo_name},#{photo_comment})


    </insert>


    <insert id = "sendComment" parameterType="comment" >
        insert into comment(spot_id, user_id,content,photo_id)
        values(#{spot_id}, #{user_id},#{content},#{photo_id})


    </insert>

    <delete id = "deleteComment" parameterType="comment" >
        DELETE FROM comment WHERE id=#{id} ;


    </delete>

    <insert id = "sendUserPick" parameterType="userPick" >
        insert into user_pick(pick_spot_id, user_id)
        values(#{pick_spot_id}, #{user_id})


    </insert>

    <delete id = "deletePick" parameterType="userPick" >
        DELETE FROM user_pick WHERE user_id=#{user_id} and pick_spot_id = #{pick_spot_id} ;


    </delete>

    <select id = "checkPick" parameterType="userPick" resultType="userPick">
        select * from user_pick WHERE user_id=#{user_id} and pick_spot_id = #{pick_spot_id};


    </select>



    <select id =  "loginUser" parameterType="loginUser" resultType="loginUser">
        select * from user where login_id =#{login_id} and login_password = #{login_password}

    </select>


    <select id = "getUserInfo" parameterType="Integer" resultType="user">
        select * from user where id = #{id}

    </select>


    <select id = "getPhotoInfo" parameterType="Integer" resultType="photo">
        select * from photo where id = #{id}

    </select>

    <select id = "lastInputSpot" resultType="spot">
        SELECT * FROM travel_spot ORDER BY id DESC LIMIT 1;

    </select>
    <select id = "lastInputPhoto" resultType="photo">
        SELECT * FROM photo ORDER BY id DESC LIMIT 1;

    </select>

    <select id = "getSpotInfo" parameterType="Integer" resultType="spot">
        select * from travel_spot where id = #{pack_id}

    </select>


    <update id = "changePassword" parameterType="changePassword">
        update user set login_password=#{changingPassword}where id=#{userId}

    </update>

    <update id = "changeNickname" parameterType="user">
        update user set nickname=#{nickname}where id=#{id}

    </update>




</mapper>